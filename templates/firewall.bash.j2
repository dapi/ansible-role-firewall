#!/bin/bash
# iptables firewall.
#
# This file should be located at /etc/firewall.bash, and is meant to work with
# the `dapi.firewall` Ansible role.
#
# @author Jeff Geerling
# @author Danil Pismenny

# No spoofing.
if [ -e /proc/sys/net/ipv4/conf/all/rp_filter ]
then
for filter in /proc/sys/net/ipv4/conf/*/rp_filter
do
echo 1 > $filter
done
fi

# Accept traffic from loopback interface (localhost).
# iptables -A INPUT -i lo -j ACCEPT

# Accept icmp ping requests.

#################3

. /etc/firewall-stop.bash


function setup() {
  command=$1
  # Define chain to allow established connections
  $command -N CUSTOM_STATES
  $command -A CUSTOM_STATES -p tcp  -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  $command -A CUSTOM_STATES -p udp  -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  $command -A CUSTOM_STATES -p icmp -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  $command -A CUSTOM_STATES -j RETURN

  # Defina main chain
  $command -N CUSTOM_INPUT

  {% for address in firewall_whitelist_addresses %}
  $command -A CUSTOM_INPUT -s {{ address }} -j ACCEPT
  {% endfor %}

  {% for port in firewall_allowed_tcp_ports %}
  $command -A CUSTOM_INPUT -p tcp --dport {{ port }} -j ACCEPT
  {% endfor %}

  {% for port in firewall_allowed_udp_ports %}
  $command -A CUSTOM_INPUT -p udp --dport {{ port }} -j ACCEPT
  {% endfor %}

  # Accept incoming ICMP
  $command -A CUSTOM_INPUT -p icmp --icmp-type echo-request -j ACCEPT

  # Additional custom rules.
  {% for rule in firewall_additional_rules %}
  {{ rule }}
  {% endfor %}

  # Drop invalid packets
  $command -A CUSTOM_INPUT -m conntrack --ctstate INVALID -j DROP

  {% if firewall_log_dropped_packets %}
  # Log other incoming requests (all of which are dropped) at 15/minute max.
  $command -A CUSTOM_INPUT -m limit --limit 15/minute -j LOG --log-level 7 --log-prefix "[DROP] "
  {% endif %}

  $command -A CUSTOM_INPUT -j CUSTOM_STATES
  $command -A CUSTOM_INPUT -j DROP

  #
  # Jump to CUSTOM_INPUT
  $command -A INPUT -i {{ external_iface }} -j CUSTOM_INPUT
}

setup "iptables"

###################33
#
# ipv6 support
#
#
{% if firewall_enable_ipv6 %}
setup "ip6tables"
# TODO
#ip6tables -N CUSTOM_INPUT
#ip6tables -A CUSTOM_INPUT -m limit --limit 15/minute -j LOG --log-level 7 --log-prefix "[DROP] "
#ip6tables -A INPUT -i {{ external_iface }} -j DROP
{% endif %}
